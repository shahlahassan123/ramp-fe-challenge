{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { useCallback, useState } from \"react\"\n// import { Employee } from \"../utils/types\"\n// import { useCustomFetch } from \"./useCustomFetch\"\n// import { EmployeeResult } from \"./types\"\n// export function useEmployees(): EmployeeResult {\n//   const { fetchWithCache, loading } = useCustomFetch()\n//   const [employees, setEmployees] = useState<Employee[] | null>(null)\n//   const fetchAll = useCallback(async () => {\n//     const employeesData = await fetchWithCache<Employee[]>(\"employees\")\n//     setEmployees(employeesData)\n//   }, [fetchWithCache])\n//   const invalidateData = useCallback(() => {\n//     setEmployees(null)\n//   }, [])\n//   return { data: employees, loading, fetchAll, invalidateData }\n// }\nimport { useCallback, useContext, useState } from \"react\";\nimport { AppContext } from \"../utils/context\";\nimport { fakeFetch } from \"../utils/fetch\";\nexport function useEmployees() {\n  _s();\n\n  const {\n    cache\n  } = useContext(AppContext);\n  const [employees, setEmployees] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchAll = useCallback(async () => {\n    setLoading(true);\n    const data = await fakeFetch(\"employees\");\n    setEmployees(data);\n    setLoading(false);\n  }, []);\n  return {\n    data: employees,\n    loading,\n    fetchAll\n  };\n}\n\n_s(useEmployees, \"1etB/06L/x2UEXqb30oA7jxXybo=\");","map":{"version":3,"names":["useCallback","useContext","useState","AppContext","fakeFetch","useEmployees","cache","employees","setEmployees","loading","setLoading","fetchAll","data"],"sources":["/Users/shahlahassan/Downloads/ramp-fe-challenge 2/src/hooks/useEmployees.ts"],"sourcesContent":["// import { useCallback, useState } from \"react\"\n// import { Employee } from \"../utils/types\"\n// import { useCustomFetch } from \"./useCustomFetch\"\n// import { EmployeeResult } from \"./types\"\n\n// export function useEmployees(): EmployeeResult {\n//   const { fetchWithCache, loading } = useCustomFetch()\n//   const [employees, setEmployees] = useState<Employee[] | null>(null)\n\n//   const fetchAll = useCallback(async () => {\n//     const employeesData = await fetchWithCache<Employee[]>(\"employees\")\n//     setEmployees(employeesData)\n//   }, [fetchWithCache])\n\n//   const invalidateData = useCallback(() => {\n//     setEmployees(null)\n//   }, [])\n\n//   return { data: employees, loading, fetchAll, invalidateData }\n// }\n\nimport { useCallback, useContext, useState } from \"react\"\nimport { AppContext } from \"../utils/context\"\nimport { fakeFetch, RegisteredEndpoints } from \"../utils/fetch\"\nimport { Employee } from \"../utils/types\"\n\nexport function useEmployees() {\n  const { cache } = useContext(AppContext)\n  const [employees, setEmployees] = useState<Employee[] | null>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const fetchAll = useCallback(async () => {\n    setLoading(true)\n    const data = await fakeFetch<Employee[], undefined>(\"employees\")\n    setEmployees(data)\n    setLoading(false)\n  }, [])\n\n  return { data: employees, loading, fetchAll }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA+C,gBAA/C;AAGA,OAAO,SAASC,YAAT,GAAwB;EAAA;;EAC7B,MAAM;IAAEC;EAAF,IAAYL,UAAU,CAACE,UAAD,CAA5B;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAoB,IAApB,CAA1C;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAU,KAAV,CAAtC;EAEA,MAAMS,QAAQ,GAAGX,WAAW,CAAC,YAAY;IACvCU,UAAU,CAAC,IAAD,CAAV;IACA,MAAME,IAAI,GAAG,MAAMR,SAAS,CAAwB,WAAxB,CAA5B;IACAI,YAAY,CAACI,IAAD,CAAZ;IACAF,UAAU,CAAC,KAAD,CAAV;EACD,CAL2B,EAKzB,EALyB,CAA5B;EAOA,OAAO;IAAEE,IAAI,EAAEL,SAAR;IAAmBE,OAAnB;IAA4BE;EAA5B,CAAP;AACD;;GAbeN,Y"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { useCallback, useContext, useState } from \"react\"\n// import { AppContext } from \"../utils/context\"\n// import { fakeFetch, RegisteredEndpoints } from \"../utils/fetch\"\n// import { Employee } from \"../utils/types\"\n// export function useEmployees() {\n//   const { cache } = useContext(AppContext)\n//   const [employees, setEmployees] = useState<Employee[] | null>(null)\n//   const [loading, setLoading] = useState<boolean>(false)\n//   const fetchAll = useCallback(async () => {\n//     setLoading(true)\n//     const data = await fakeFetch<Employee[], {}>(\"employees\", {}) // Provide an empty object as params\n//     setEmployees(data)\n//     setLoading(false)\n//   }, [])\n//   return { data: employees, loading, fetchAll }\n// }\nimport { useCallback, useState } from \"react\";\nimport { fakeFetch } from \"../utils/fetch\";\nexport function useEmployees() {\n  _s();\n\n  const [employees, setEmployees] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchAll = useCallback(async () => {\n    setLoading(true);\n    const data = await fakeFetch(\"employees\", {}); // Provide an empty object as params\n\n    setEmployees(data);\n    setLoading(false);\n  }, []);\n  return {\n    data: employees,\n    loading,\n    fetchAll\n  };\n}\n\n_s(useEmployees, \"NZrTuwg7pEZ5SwoACK3ajk+3uQQ=\");","map":{"version":3,"names":["useCallback","useState","fakeFetch","useEmployees","employees","setEmployees","loading","setLoading","fetchAll","data"],"sources":["/Users/shahlahassan/Downloads/ramp-fe-challenge 2/src/hooks/useEmployees.ts"],"sourcesContent":["\n\n// import { useCallback, useContext, useState } from \"react\"\n// import { AppContext } from \"../utils/context\"\n// import { fakeFetch, RegisteredEndpoints } from \"../utils/fetch\"\n// import { Employee } from \"../utils/types\"\n\n// export function useEmployees() {\n//   const { cache } = useContext(AppContext)\n//   const [employees, setEmployees] = useState<Employee[] | null>(null)\n//   const [loading, setLoading] = useState<boolean>(false)\n\n//   const fetchAll = useCallback(async () => {\n//     setLoading(true)\n//     const data = await fakeFetch<Employee[], {}>(\"employees\", {}) // Provide an empty object as params\n//     setEmployees(data)\n//     setLoading(false)\n//   }, [])\n\n//   return { data: employees, loading, fetchAll }\n// }\n\n\nimport { useCallback, useState } from \"react\"\nimport { fakeFetch } from \"../utils/fetch\"\nimport { Employee } from \"../utils/types\"\n\nexport function useEmployees() {\n  const [employees, setEmployees] = useState<Employee[] | null>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const fetchAll = useCallback(async () => {\n    setLoading(true)\n    const data = await fakeFetch<Employee[], {}>(\"employees\", {}) // Provide an empty object as params\n    setEmployees(data)\n    setLoading(false)\n  }, [])\n\n  return { data: employees, loading, fetchAll }\n}\n"],"mappings":";;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAGA,OAAO,SAASC,YAAT,GAAwB;EAAA;;EAC7B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAoB,IAApB,CAA1C;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAU,KAAV,CAAtC;EAEA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvCO,UAAU,CAAC,IAAD,CAAV;IACA,MAAME,IAAI,GAAG,MAAMP,SAAS,CAAiB,WAAjB,EAA8B,EAA9B,CAA5B,CAFuC,CAEuB;;IAC9DG,YAAY,CAACI,IAAD,CAAZ;IACAF,UAAU,CAAC,KAAD,CAAV;EACD,CAL2B,EAKzB,EALyB,CAA5B;EAOA,OAAO;IAAEE,IAAI,EAAEL,SAAR;IAAmBE,OAAnB;IAA4BE;EAA5B,CAAP;AACD;;GAZeL,Y"},"metadata":{},"sourceType":"module"}